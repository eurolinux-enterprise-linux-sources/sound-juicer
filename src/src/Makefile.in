# Makefile.in generated by automake 1.11 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,
# Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
bin_PROGRAMS = sound-juicer$(EXEEXT)
subdir = src
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/gnome-doc-utils.m4 \
	$(top_srcdir)/m4/intltool.m4 $(top_srcdir)/m4/libtool.m4 \
	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
	$(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__installdirs = "$(DESTDIR)$(bindir)"
PROGRAMS = $(bin_PROGRAMS)
am__objects_1 = sound_juicer-bacon-message-connection.$(OBJEXT)
am_sound_juicer_OBJECTS = sound_juicer-dummy.$(OBJEXT) \
	sound_juicer-sj-main.$(OBJEXT) sound_juicer-sj-prefs.$(OBJEXT) \
	sound_juicer-sj-play.$(OBJEXT) sound_juicer-sj-about.$(OBJEXT) \
	sound_juicer-sj-extracting.$(OBJEXT) \
	sound_juicer-sj-inhibit.$(OBJEXT) \
	sound_juicer-sj-genres.$(OBJEXT) \
	sound_juicer-gedit-message-area.$(OBJEXT) \
	sound_juicer-gconf-bridge.$(OBJEXT) \
	sound_juicer-egg-play-preview.$(OBJEXT) $(am__objects_1)
sound_juicer_OBJECTS = $(am_sound_juicer_OBJECTS)
am__DEPENDENCIES_1 =
sound_juicer_DEPENDENCIES = $(top_builddir)/libjuicer/libjuicer.la \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
sound_juicer_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(sound_juicer_CXXFLAGS) \
	$(CXXFLAGS) $(sound_juicer_LDFLAGS) $(LDFLAGS) -o $@
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC    " $@;
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD  " $@;
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_$(V))
am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))
am__v_CXX_0 = @echo "  CXX   " $@;
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CXXLD = $(am__v_CXXLD_$(V))
am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))
am__v_CXXLD_0 = @echo "  CXXLD " $@;
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN   " $@;
SOURCES = $(sound_juicer_SOURCES)
DIST_SOURCES = $(sound_juicer_SOURCES)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
ACLOCAL_AMFLAGS = @ACLOCAL_AMFLAGS@
ALL_LINGUAS = @ALL_LINGUAS@
AMTAR = @AMTAR@
AM_CFLAGS = @AM_CFLAGS@
AM_CPPFLAGS = @AM_CPPFLAGS@
AM_CXXFLAGS = @AM_CXXFLAGS@
AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
AM_LDFLAGS = @AM_LDFLAGS@
AR = @AR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
BURN_CFLAGS = @BURN_CFLAGS@
BURN_LIBS = @BURN_LIBS@
CATALOGS = @CATALOGS@
CATOBJEXT = @CATOBJEXT@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CDIO_CFLAGS = @CDIO_CFLAGS@
CDIO_LIBS = @CDIO_LIBS@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DATADIRNAME = @DATADIRNAME@
DBUS_CFLAGS = @DBUS_CFLAGS@
DBUS_LIBS = @DBUS_LIBS@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DISABLE_DEPRECATED = @DISABLE_DEPRECATED@
DISTCHECK_CONFIGURE_FLAGS = @DISTCHECK_CONFIGURE_FLAGS@
DOC_USER_FORMATS = @DOC_USER_FORMATS@
DSYMUTIL = @DSYMUTIL@
DUMPBIN = @DUMPBIN@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
FGREP = @FGREP@
GCONFTOOL = @GCONFTOOL@
GCONF_SCHEMA_CONFIG_SOURCE = @GCONF_SCHEMA_CONFIG_SOURCE@
GCONF_SCHEMA_FILE_DIR = @GCONF_SCHEMA_FILE_DIR@
GETTEXT_PACKAGE = @GETTEXT_PACKAGE@
GIO_CFLAGS = @GIO_CFLAGS@
GIO_LIBS = @GIO_LIBS@
GLIB_CFLAGS = @GLIB_CFLAGS@
GLIB_LIBS = @GLIB_LIBS@
GMOFILES = @GMOFILES@
GMSGFMT = @GMSGFMT@
GREP = @GREP@
GSTREAMER_CFLAGS = @GSTREAMER_CFLAGS@
GSTREAMER_LIBS = @GSTREAMER_LIBS@
GST_INSPECT = @GST_INSPECT@
HELP_DIR = @HELP_DIR@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
INSTOBJEXT = @INSTOBJEXT@
INTLLIBS = @INTLLIBS@
INTLTOOL_EXTRACT = @INTLTOOL_EXTRACT@
INTLTOOL_MERGE = @INTLTOOL_MERGE@
INTLTOOL_PERL = @INTLTOOL_PERL@
INTLTOOL_UPDATE = @INTLTOOL_UPDATE@
LD = @LD@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LIPO = @LIPO@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAINT = @MAINT@
MAKEINFO = @MAKEINFO@
MEDIA_PROFILES_CFLAGS = @MEDIA_PROFILES_CFLAGS@
MEDIA_PROFILES_LIBS = @MEDIA_PROFILES_LIBS@
MKDIR_P = @MKDIR_P@
MKINSTALLDIRS = @MKINSTALLDIRS@
MSGFMT = @MSGFMT@
MSGFMT_OPTS = @MSGFMT_OPTS@
MSGMERGE = @MSGMERGE@
MUSICBRAINZ3_CFLAGS = @MUSICBRAINZ3_CFLAGS@
MUSICBRAINZ3_LIBS = @MUSICBRAINZ3_LIBS@
MUSICBRAINZ_CFLAGS = @MUSICBRAINZ_CFLAGS@
MUSICBRAINZ_LIBS = @MUSICBRAINZ_LIBS@
NM = @NM@
NMEDIT = @NMEDIT@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
OMF_DIR = @OMF_DIR@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PKG_CONFIG = @PKG_CONFIG@
POFILES = @POFILES@
POSUB = @POSUB@
PO_IN_DATADIR_FALSE = @PO_IN_DATADIR_FALSE@
PO_IN_DATADIR_TRUE = @PO_IN_DATADIR_TRUE@
RANLIB = @RANLIB@
SCROLLKEEPER_BUILD_REQUIRED = @SCROLLKEEPER_BUILD_REQUIRED@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
UI_CFLAGS = @UI_CFLAGS@
UI_LIBS = @UI_LIBS@
USE_NLS = @USE_NLS@
VERSION = @VERSION@
WARN_CFLAGS = @WARN_CFLAGS@
WARN_CXXFLAGS = @WARN_CXXFLAGS@
XGETTEXT = @XGETTEXT@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
lt_ECHO = @lt_ECHO@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
sound_juicer_SOURCES = \
	dummy.cpp \
	sound-juicer.h \
	sj-main.h \
	sj-main.c \
	sj-prefs.h \
	sj-prefs.c \
	sj-play.c \
	sj-play.h \
	sj-about.h \
	sj-about.c \
	sj-extracting.h \
	sj-extracting.c \
	sj-inhibit.h \
	sj-inhibit.c \
	sj-genres.h \
	sj-genres.c \
	gedit-message-area.h \
	gedit-message-area.c \
	gconf-bridge.h \
	gconf-bridge.c \
	egg-play-preview.c \
	egg-play-preview.h \
	$(BACON_FILES)

sound_juicer_CPPFLAGS = \
	-I$(top_srcdir)/libjuicer \
	-DGNOMELOCALEDIR=\""$(datadir)/locale"\"  \
	-DDATADIR=\""$(datadir)"\" \
	-DPREFIX=\""$(prefix)"\" \
	-DLIBDIR=\""$(libdir)"\" \
	-DSYSCONFDIR=\""$(sysconfdir)"\" \
	-DPIXMAPDIR=\""$(datadir)/pixmaps"\" \
	-DPKGDATADIR=\""$(datadir)/sound-juicer"\" \
	$(DISABLE_DEPRECATED) \
	$(AM_CPPFLAGS)

sound_juicer_CFLAGS = \
	$(GSTREAMER_CFLAGS) \
	$(MEDIA_PROFILES_CFLAGS) \
	$(BURN_CFLAGS) \
	$(UI_CFLAGS) \
	$(WARN_CFLAGS) \
	$(AM_CFLAGS)

sound_juicer_CXXFLAGS = \
	$(GSTREAMER_CFLAGS) \
	$(MEDIA_PROFILES_CFLAGS) \
	$(BURN_CFLAGS) \
	$(UI_CFLAGS) \
	$(WARN_CXXFLAGS) \
	$(AM_CXXFLAGS)

sound_juicer_LDADD = \
	$(top_builddir)/libjuicer/libjuicer.la \
	$(MEDIA_PROFILES_LIBS) \
	$(GSTREAMER_LIBS) \
	$(BURN_LIBS) \
	$(UI_LIBS)

sound_juicer_LDFLAGS = \
	$(AM_LDFLAGS)

BACON_DIR = $(srcdir)/../../libbacon/src/
BACON_FILES = bacon-message-connection.h bacon-message-connection.c
all: all-am

.SUFFIXES:
.SUFFIXES: .c .cpp .lo .o .obj
$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu src/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu src/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: @MAINTAINER_MODE_TRUE@ $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): @MAINTAINER_MODE_TRUE@ $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(MKDIR_P) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p || test -f $$p1; \
	  then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' `; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
sound-juicer$(EXEEXT): $(sound_juicer_OBJECTS) $(sound_juicer_DEPENDENCIES) 
	@rm -f sound-juicer$(EXEEXT)
	$(AM_V_CXXLD)$(sound_juicer_LINK) $(sound_juicer_OBJECTS) $(sound_juicer_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sound_juicer-bacon-message-connection.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sound_juicer-dummy.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sound_juicer-egg-play-preview.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sound_juicer-gconf-bridge.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sound_juicer-gedit-message-area.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sound_juicer-sj-about.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sound_juicer-sj-extracting.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sound_juicer-sj-genres.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sound_juicer-sj-inhibit.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sound_juicer-sj-main.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sound_juicer-sj-play.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sound_juicer-sj-prefs.Po@am__quote@

.c.o:
@am__fastdepCC_TRUE@	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@am__fastdepCC_FALSE@	$(AM_V_CC) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(COMPILE) -c $<

.c.obj:
@am__fastdepCC_TRUE@	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@am__fastdepCC_FALSE@	$(AM_V_CC) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
@am__fastdepCC_FALSE@	$(AM_V_CC) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LTCOMPILE) -c -o $@ $<

sound_juicer-sj-main.o: sj-main.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sound_juicer_CPPFLAGS) $(CPPFLAGS) $(sound_juicer_CFLAGS) $(CFLAGS) -MT sound_juicer-sj-main.o -MD -MP -MF $(DEPDIR)/sound_juicer-sj-main.Tpo -c -o sound_juicer-sj-main.o `test -f 'sj-main.c' || echo '$(srcdir)/'`sj-main.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sound_juicer-sj-main.Tpo $(DEPDIR)/sound_juicer-sj-main.Po
@am__fastdepCC_FALSE@	$(AM_V_CC) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='sj-main.c' object='sound_juicer-sj-main.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sound_juicer_CPPFLAGS) $(CPPFLAGS) $(sound_juicer_CFLAGS) $(CFLAGS) -c -o sound_juicer-sj-main.o `test -f 'sj-main.c' || echo '$(srcdir)/'`sj-main.c

sound_juicer-sj-main.obj: sj-main.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sound_juicer_CPPFLAGS) $(CPPFLAGS) $(sound_juicer_CFLAGS) $(CFLAGS) -MT sound_juicer-sj-main.obj -MD -MP -MF $(DEPDIR)/sound_juicer-sj-main.Tpo -c -o sound_juicer-sj-main.obj `if test -f 'sj-main.c'; then $(CYGPATH_W) 'sj-main.c'; else $(CYGPATH_W) '$(srcdir)/sj-main.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sound_juicer-sj-main.Tpo $(DEPDIR)/sound_juicer-sj-main.Po
@am__fastdepCC_FALSE@	$(AM_V_CC) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='sj-main.c' object='sound_juicer-sj-main.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sound_juicer_CPPFLAGS) $(CPPFLAGS) $(sound_juicer_CFLAGS) $(CFLAGS) -c -o sound_juicer-sj-main.obj `if test -f 'sj-main.c'; then $(CYGPATH_W) 'sj-main.c'; else $(CYGPATH_W) '$(srcdir)/sj-main.c'; fi`

sound_juicer-sj-prefs.o: sj-prefs.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sound_juicer_CPPFLAGS) $(CPPFLAGS) $(sound_juicer_CFLAGS) $(CFLAGS) -MT sound_juicer-sj-prefs.o -MD -MP -MF $(DEPDIR)/sound_juicer-sj-prefs.Tpo -c -o sound_juicer-sj-prefs.o `test -f 'sj-prefs.c' || echo '$(srcdir)/'`sj-prefs.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sound_juicer-sj-prefs.Tpo $(DEPDIR)/sound_juicer-sj-prefs.Po
@am__fastdepCC_FALSE@	$(AM_V_CC) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='sj-prefs.c' object='sound_juicer-sj-prefs.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sound_juicer_CPPFLAGS) $(CPPFLAGS) $(sound_juicer_CFLAGS) $(CFLAGS) -c -o sound_juicer-sj-prefs.o `test -f 'sj-prefs.c' || echo '$(srcdir)/'`sj-prefs.c

sound_juicer-sj-prefs.obj: sj-prefs.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sound_juicer_CPPFLAGS) $(CPPFLAGS) $(sound_juicer_CFLAGS) $(CFLAGS) -MT sound_juicer-sj-prefs.obj -MD -MP -MF $(DEPDIR)/sound_juicer-sj-prefs.Tpo -c -o sound_juicer-sj-prefs.obj `if test -f 'sj-prefs.c'; then $(CYGPATH_W) 'sj-prefs.c'; else $(CYGPATH_W) '$(srcdir)/sj-prefs.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sound_juicer-sj-prefs.Tpo $(DEPDIR)/sound_juicer-sj-prefs.Po
@am__fastdepCC_FALSE@	$(AM_V_CC) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='sj-prefs.c' object='sound_juicer-sj-prefs.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sound_juicer_CPPFLAGS) $(CPPFLAGS) $(sound_juicer_CFLAGS) $(CFLAGS) -c -o sound_juicer-sj-prefs.obj `if test -f 'sj-prefs.c'; then $(CYGPATH_W) 'sj-prefs.c'; else $(CYGPATH_W) '$(srcdir)/sj-prefs.c'; fi`

sound_juicer-sj-play.o: sj-play.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sound_juicer_CPPFLAGS) $(CPPFLAGS) $(sound_juicer_CFLAGS) $(CFLAGS) -MT sound_juicer-sj-play.o -MD -MP -MF $(DEPDIR)/sound_juicer-sj-play.Tpo -c -o sound_juicer-sj-play.o `test -f 'sj-play.c' || echo '$(srcdir)/'`sj-play.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sound_juicer-sj-play.Tpo $(DEPDIR)/sound_juicer-sj-play.Po
@am__fastdepCC_FALSE@	$(AM_V_CC) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='sj-play.c' object='sound_juicer-sj-play.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sound_juicer_CPPFLAGS) $(CPPFLAGS) $(sound_juicer_CFLAGS) $(CFLAGS) -c -o sound_juicer-sj-play.o `test -f 'sj-play.c' || echo '$(srcdir)/'`sj-play.c

sound_juicer-sj-play.obj: sj-play.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sound_juicer_CPPFLAGS) $(CPPFLAGS) $(sound_juicer_CFLAGS) $(CFLAGS) -MT sound_juicer-sj-play.obj -MD -MP -MF $(DEPDIR)/sound_juicer-sj-play.Tpo -c -o sound_juicer-sj-play.obj `if test -f 'sj-play.c'; then $(CYGPATH_W) 'sj-play.c'; else $(CYGPATH_W) '$(srcdir)/sj-play.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sound_juicer-sj-play.Tpo $(DEPDIR)/sound_juicer-sj-play.Po
@am__fastdepCC_FALSE@	$(AM_V_CC) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='sj-play.c' object='sound_juicer-sj-play.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sound_juicer_CPPFLAGS) $(CPPFLAGS) $(sound_juicer_CFLAGS) $(CFLAGS) -c -o sound_juicer-sj-play.obj `if test -f 'sj-play.c'; then $(CYGPATH_W) 'sj-play.c'; else $(CYGPATH_W) '$(srcdir)/sj-play.c'; fi`

sound_juicer-sj-about.o: sj-about.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sound_juicer_CPPFLAGS) $(CPPFLAGS) $(sound_juicer_CFLAGS) $(CFLAGS) -MT sound_juicer-sj-about.o -MD -MP -MF $(DEPDIR)/sound_juicer-sj-about.Tpo -c -o sound_juicer-sj-about.o `test -f 'sj-about.c' || echo '$(srcdir)/'`sj-about.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sound_juicer-sj-about.Tpo $(DEPDIR)/sound_juicer-sj-about.Po
@am__fastdepCC_FALSE@	$(AM_V_CC) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='sj-about.c' object='sound_juicer-sj-about.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sound_juicer_CPPFLAGS) $(CPPFLAGS) $(sound_juicer_CFLAGS) $(CFLAGS) -c -o sound_juicer-sj-about.o `test -f 'sj-about.c' || echo '$(srcdir)/'`sj-about.c

sound_juicer-sj-about.obj: sj-about.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sound_juicer_CPPFLAGS) $(CPPFLAGS) $(sound_juicer_CFLAGS) $(CFLAGS) -MT sound_juicer-sj-about.obj -MD -MP -MF $(DEPDIR)/sound_juicer-sj-about.Tpo -c -o sound_juicer-sj-about.obj `if test -f 'sj-about.c'; then $(CYGPATH_W) 'sj-about.c'; else $(CYGPATH_W) '$(srcdir)/sj-about.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sound_juicer-sj-about.Tpo $(DEPDIR)/sound_juicer-sj-about.Po
@am__fastdepCC_FALSE@	$(AM_V_CC) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='sj-about.c' object='sound_juicer-sj-about.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sound_juicer_CPPFLAGS) $(CPPFLAGS) $(sound_juicer_CFLAGS) $(CFLAGS) -c -o sound_juicer-sj-about.obj `if test -f 'sj-about.c'; then $(CYGPATH_W) 'sj-about.c'; else $(CYGPATH_W) '$(srcdir)/sj-about.c'; fi`

sound_juicer-sj-extracting.o: sj-extracting.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sound_juicer_CPPFLAGS) $(CPPFLAGS) $(sound_juicer_CFLAGS) $(CFLAGS) -MT sound_juicer-sj-extracting.o -MD -MP -MF $(DEPDIR)/sound_juicer-sj-extracting.Tpo -c -o sound_juicer-sj-extracting.o `test -f 'sj-extracting.c' || echo '$(srcdir)/'`sj-extracting.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sound_juicer-sj-extracting.Tpo $(DEPDIR)/sound_juicer-sj-extracting.Po
@am__fastdepCC_FALSE@	$(AM_V_CC) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='sj-extracting.c' object='sound_juicer-sj-extracting.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sound_juicer_CPPFLAGS) $(CPPFLAGS) $(sound_juicer_CFLAGS) $(CFLAGS) -c -o sound_juicer-sj-extracting.o `test -f 'sj-extracting.c' || echo '$(srcdir)/'`sj-extracting.c

sound_juicer-sj-extracting.obj: sj-extracting.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sound_juicer_CPPFLAGS) $(CPPFLAGS) $(sound_juicer_CFLAGS) $(CFLAGS) -MT sound_juicer-sj-extracting.obj -MD -MP -MF $(DEPDIR)/sound_juicer-sj-extracting.Tpo -c -o sound_juicer-sj-extracting.obj `if test -f 'sj-extracting.c'; then $(CYGPATH_W) 'sj-extracting.c'; else $(CYGPATH_W) '$(srcdir)/sj-extracting.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sound_juicer-sj-extracting.Tpo $(DEPDIR)/sound_juicer-sj-extracting.Po
@am__fastdepCC_FALSE@	$(AM_V_CC) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='sj-extracting.c' object='sound_juicer-sj-extracting.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sound_juicer_CPPFLAGS) $(CPPFLAGS) $(sound_juicer_CFLAGS) $(CFLAGS) -c -o sound_juicer-sj-extracting.obj `if test -f 'sj-extracting.c'; then $(CYGPATH_W) 'sj-extracting.c'; else $(CYGPATH_W) '$(srcdir)/sj-extracting.c'; fi`

sound_juicer-sj-inhibit.o: sj-inhibit.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sound_juicer_CPPFLAGS) $(CPPFLAGS) $(sound_juicer_CFLAGS) $(CFLAGS) -MT sound_juicer-sj-inhibit.o -MD -MP -MF $(DEPDIR)/sound_juicer-sj-inhibit.Tpo -c -o sound_juicer-sj-inhibit.o `test -f 'sj-inhibit.c' || echo '$(srcdir)/'`sj-inhibit.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sound_juicer-sj-inhibit.Tpo $(DEPDIR)/sound_juicer-sj-inhibit.Po
@am__fastdepCC_FALSE@	$(AM_V_CC) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='sj-inhibit.c' object='sound_juicer-sj-inhibit.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sound_juicer_CPPFLAGS) $(CPPFLAGS) $(sound_juicer_CFLAGS) $(CFLAGS) -c -o sound_juicer-sj-inhibit.o `test -f 'sj-inhibit.c' || echo '$(srcdir)/'`sj-inhibit.c

sound_juicer-sj-inhibit.obj: sj-inhibit.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sound_juicer_CPPFLAGS) $(CPPFLAGS) $(sound_juicer_CFLAGS) $(CFLAGS) -MT sound_juicer-sj-inhibit.obj -MD -MP -MF $(DEPDIR)/sound_juicer-sj-inhibit.Tpo -c -o sound_juicer-sj-inhibit.obj `if test -f 'sj-inhibit.c'; then $(CYGPATH_W) 'sj-inhibit.c'; else $(CYGPATH_W) '$(srcdir)/sj-inhibit.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sound_juicer-sj-inhibit.Tpo $(DEPDIR)/sound_juicer-sj-inhibit.Po
@am__fastdepCC_FALSE@	$(AM_V_CC) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='sj-inhibit.c' object='sound_juicer-sj-inhibit.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sound_juicer_CPPFLAGS) $(CPPFLAGS) $(sound_juicer_CFLAGS) $(CFLAGS) -c -o sound_juicer-sj-inhibit.obj `if test -f 'sj-inhibit.c'; then $(CYGPATH_W) 'sj-inhibit.c'; else $(CYGPATH_W) '$(srcdir)/sj-inhibit.c'; fi`

sound_juicer-sj-genres.o: sj-genres.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sound_juicer_CPPFLAGS) $(CPPFLAGS) $(sound_juicer_CFLAGS) $(CFLAGS) -MT sound_juicer-sj-genres.o -MD -MP -MF $(DEPDIR)/sound_juicer-sj-genres.Tpo -c -o sound_juicer-sj-genres.o `test -f 'sj-genres.c' || echo '$(srcdir)/'`sj-genres.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sound_juicer-sj-genres.Tpo $(DEPDIR)/sound_juicer-sj-genres.Po
@am__fastdepCC_FALSE@	$(AM_V_CC) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='sj-genres.c' object='sound_juicer-sj-genres.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sound_juicer_CPPFLAGS) $(CPPFLAGS) $(sound_juicer_CFLAGS) $(CFLAGS) -c -o sound_juicer-sj-genres.o `test -f 'sj-genres.c' || echo '$(srcdir)/'`sj-genres.c

sound_juicer-sj-genres.obj: sj-genres.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sound_juicer_CPPFLAGS) $(CPPFLAGS) $(sound_juicer_CFLAGS) $(CFLAGS) -MT sound_juicer-sj-genres.obj -MD -MP -MF $(DEPDIR)/sound_juicer-sj-genres.Tpo -c -o sound_juicer-sj-genres.obj `if test -f 'sj-genres.c'; then $(CYGPATH_W) 'sj-genres.c'; else $(CYGPATH_W) '$(srcdir)/sj-genres.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sound_juicer-sj-genres.Tpo $(DEPDIR)/sound_juicer-sj-genres.Po
@am__fastdepCC_FALSE@	$(AM_V_CC) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='sj-genres.c' object='sound_juicer-sj-genres.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sound_juicer_CPPFLAGS) $(CPPFLAGS) $(sound_juicer_CFLAGS) $(CFLAGS) -c -o sound_juicer-sj-genres.obj `if test -f 'sj-genres.c'; then $(CYGPATH_W) 'sj-genres.c'; else $(CYGPATH_W) '$(srcdir)/sj-genres.c'; fi`

sound_juicer-gedit-message-area.o: gedit-message-area.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sound_juicer_CPPFLAGS) $(CPPFLAGS) $(sound_juicer_CFLAGS) $(CFLAGS) -MT sound_juicer-gedit-message-area.o -MD -MP -MF $(DEPDIR)/sound_juicer-gedit-message-area.Tpo -c -o sound_juicer-gedit-message-area.o `test -f 'gedit-message-area.c' || echo '$(srcdir)/'`gedit-message-area.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sound_juicer-gedit-message-area.Tpo $(DEPDIR)/sound_juicer-gedit-message-area.Po
@am__fastdepCC_FALSE@	$(AM_V_CC) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='gedit-message-area.c' object='sound_juicer-gedit-message-area.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sound_juicer_CPPFLAGS) $(CPPFLAGS) $(sound_juicer_CFLAGS) $(CFLAGS) -c -o sound_juicer-gedit-message-area.o `test -f 'gedit-message-area.c' || echo '$(srcdir)/'`gedit-message-area.c

sound_juicer-gedit-message-area.obj: gedit-message-area.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sound_juicer_CPPFLAGS) $(CPPFLAGS) $(sound_juicer_CFLAGS) $(CFLAGS) -MT sound_juicer-gedit-message-area.obj -MD -MP -MF $(DEPDIR)/sound_juicer-gedit-message-area.Tpo -c -o sound_juicer-gedit-message-area.obj `if test -f 'gedit-message-area.c'; then $(CYGPATH_W) 'gedit-message-area.c'; else $(CYGPATH_W) '$(srcdir)/gedit-message-area.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sound_juicer-gedit-message-area.Tpo $(DEPDIR)/sound_juicer-gedit-message-area.Po
@am__fastdepCC_FALSE@	$(AM_V_CC) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='gedit-message-area.c' object='sound_juicer-gedit-message-area.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sound_juicer_CPPFLAGS) $(CPPFLAGS) $(sound_juicer_CFLAGS) $(CFLAGS) -c -o sound_juicer-gedit-message-area.obj `if test -f 'gedit-message-area.c'; then $(CYGPATH_W) 'gedit-message-area.c'; else $(CYGPATH_W) '$(srcdir)/gedit-message-area.c'; fi`

sound_juicer-gconf-bridge.o: gconf-bridge.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sound_juicer_CPPFLAGS) $(CPPFLAGS) $(sound_juicer_CFLAGS) $(CFLAGS) -MT sound_juicer-gconf-bridge.o -MD -MP -MF $(DEPDIR)/sound_juicer-gconf-bridge.Tpo -c -o sound_juicer-gconf-bridge.o `test -f 'gconf-bridge.c' || echo '$(srcdir)/'`gconf-bridge.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sound_juicer-gconf-bridge.Tpo $(DEPDIR)/sound_juicer-gconf-bridge.Po
@am__fastdepCC_FALSE@	$(AM_V_CC) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='gconf-bridge.c' object='sound_juicer-gconf-bridge.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sound_juicer_CPPFLAGS) $(CPPFLAGS) $(sound_juicer_CFLAGS) $(CFLAGS) -c -o sound_juicer-gconf-bridge.o `test -f 'gconf-bridge.c' || echo '$(srcdir)/'`gconf-bridge.c

sound_juicer-gconf-bridge.obj: gconf-bridge.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sound_juicer_CPPFLAGS) $(CPPFLAGS) $(sound_juicer_CFLAGS) $(CFLAGS) -MT sound_juicer-gconf-bridge.obj -MD -MP -MF $(DEPDIR)/sound_juicer-gconf-bridge.Tpo -c -o sound_juicer-gconf-bridge.obj `if test -f 'gconf-bridge.c'; then $(CYGPATH_W) 'gconf-bridge.c'; else $(CYGPATH_W) '$(srcdir)/gconf-bridge.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sound_juicer-gconf-bridge.Tpo $(DEPDIR)/sound_juicer-gconf-bridge.Po
@am__fastdepCC_FALSE@	$(AM_V_CC) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='gconf-bridge.c' object='sound_juicer-gconf-bridge.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sound_juicer_CPPFLAGS) $(CPPFLAGS) $(sound_juicer_CFLAGS) $(CFLAGS) -c -o sound_juicer-gconf-bridge.obj `if test -f 'gconf-bridge.c'; then $(CYGPATH_W) 'gconf-bridge.c'; else $(CYGPATH_W) '$(srcdir)/gconf-bridge.c'; fi`

sound_juicer-egg-play-preview.o: egg-play-preview.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sound_juicer_CPPFLAGS) $(CPPFLAGS) $(sound_juicer_CFLAGS) $(CFLAGS) -MT sound_juicer-egg-play-preview.o -MD -MP -MF $(DEPDIR)/sound_juicer-egg-play-preview.Tpo -c -o sound_juicer-egg-play-preview.o `test -f 'egg-play-preview.c' || echo '$(srcdir)/'`egg-play-preview.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sound_juicer-egg-play-preview.Tpo $(DEPDIR)/sound_juicer-egg-play-preview.Po
@am__fastdepCC_FALSE@	$(AM_V_CC) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='egg-play-preview.c' object='sound_juicer-egg-play-preview.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sound_juicer_CPPFLAGS) $(CPPFLAGS) $(sound_juicer_CFLAGS) $(CFLAGS) -c -o sound_juicer-egg-play-preview.o `test -f 'egg-play-preview.c' || echo '$(srcdir)/'`egg-play-preview.c

sound_juicer-egg-play-preview.obj: egg-play-preview.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sound_juicer_CPPFLAGS) $(CPPFLAGS) $(sound_juicer_CFLAGS) $(CFLAGS) -MT sound_juicer-egg-play-preview.obj -MD -MP -MF $(DEPDIR)/sound_juicer-egg-play-preview.Tpo -c -o sound_juicer-egg-play-preview.obj `if test -f 'egg-play-preview.c'; then $(CYGPATH_W) 'egg-play-preview.c'; else $(CYGPATH_W) '$(srcdir)/egg-play-preview.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sound_juicer-egg-play-preview.Tpo $(DEPDIR)/sound_juicer-egg-play-preview.Po
@am__fastdepCC_FALSE@	$(AM_V_CC) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='egg-play-preview.c' object='sound_juicer-egg-play-preview.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sound_juicer_CPPFLAGS) $(CPPFLAGS) $(sound_juicer_CFLAGS) $(CFLAGS) -c -o sound_juicer-egg-play-preview.obj `if test -f 'egg-play-preview.c'; then $(CYGPATH_W) 'egg-play-preview.c'; else $(CYGPATH_W) '$(srcdir)/egg-play-preview.c'; fi`

sound_juicer-bacon-message-connection.o: bacon-message-connection.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sound_juicer_CPPFLAGS) $(CPPFLAGS) $(sound_juicer_CFLAGS) $(CFLAGS) -MT sound_juicer-bacon-message-connection.o -MD -MP -MF $(DEPDIR)/sound_juicer-bacon-message-connection.Tpo -c -o sound_juicer-bacon-message-connection.o `test -f 'bacon-message-connection.c' || echo '$(srcdir)/'`bacon-message-connection.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sound_juicer-bacon-message-connection.Tpo $(DEPDIR)/sound_juicer-bacon-message-connection.Po
@am__fastdepCC_FALSE@	$(AM_V_CC) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='bacon-message-connection.c' object='sound_juicer-bacon-message-connection.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sound_juicer_CPPFLAGS) $(CPPFLAGS) $(sound_juicer_CFLAGS) $(CFLAGS) -c -o sound_juicer-bacon-message-connection.o `test -f 'bacon-message-connection.c' || echo '$(srcdir)/'`bacon-message-connection.c

sound_juicer-bacon-message-connection.obj: bacon-message-connection.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sound_juicer_CPPFLAGS) $(CPPFLAGS) $(sound_juicer_CFLAGS) $(CFLAGS) -MT sound_juicer-bacon-message-connection.obj -MD -MP -MF $(DEPDIR)/sound_juicer-bacon-message-connection.Tpo -c -o sound_juicer-bacon-message-connection.obj `if test -f 'bacon-message-connection.c'; then $(CYGPATH_W) 'bacon-message-connection.c'; else $(CYGPATH_W) '$(srcdir)/bacon-message-connection.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sound_juicer-bacon-message-connection.Tpo $(DEPDIR)/sound_juicer-bacon-message-connection.Po
@am__fastdepCC_FALSE@	$(AM_V_CC) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='bacon-message-connection.c' object='sound_juicer-bacon-message-connection.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sound_juicer_CPPFLAGS) $(CPPFLAGS) $(sound_juicer_CFLAGS) $(CFLAGS) -c -o sound_juicer-bacon-message-connection.obj `if test -f 'bacon-message-connection.c'; then $(CYGPATH_W) 'bacon-message-connection.c'; else $(CYGPATH_W) '$(srcdir)/bacon-message-connection.c'; fi`

.cpp.o:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LTCXXCOMPILE) -c -o $@ $<

sound_juicer-dummy.o: dummy.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sound_juicer_CPPFLAGS) $(CPPFLAGS) $(sound_juicer_CXXFLAGS) $(CXXFLAGS) -MT sound_juicer-dummy.o -MD -MP -MF $(DEPDIR)/sound_juicer-dummy.Tpo -c -o sound_juicer-dummy.o `test -f 'dummy.cpp' || echo '$(srcdir)/'`dummy.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sound_juicer-dummy.Tpo $(DEPDIR)/sound_juicer-dummy.Po
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='dummy.cpp' object='sound_juicer-dummy.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sound_juicer_CPPFLAGS) $(CPPFLAGS) $(sound_juicer_CXXFLAGS) $(CXXFLAGS) -c -o sound_juicer-dummy.o `test -f 'dummy.cpp' || echo '$(srcdir)/'`dummy.cpp

sound_juicer-dummy.obj: dummy.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sound_juicer_CPPFLAGS) $(CPPFLAGS) $(sound_juicer_CXXFLAGS) $(CXXFLAGS) -MT sound_juicer-dummy.obj -MD -MP -MF $(DEPDIR)/sound_juicer-dummy.Tpo -c -o sound_juicer-dummy.obj `if test -f 'dummy.cpp'; then $(CYGPATH_W) 'dummy.cpp'; else $(CYGPATH_W) '$(srcdir)/dummy.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/sound_juicer-dummy.Tpo $(DEPDIR)/sound_juicer-dummy.Po
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='dummy.cpp' object='sound_juicer-dummy.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sound_juicer_CPPFLAGS) $(CPPFLAGS) $(sound_juicer_CXXFLAGS) $(CXXFLAGS) -c -o sound_juicer-dummy.obj `if test -f 'dummy.cpp'; then $(CYGPATH_W) 'dummy.cpp'; else $(CYGPATH_W) '$(srcdir)/dummy.cpp'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS)
installdirs:
	for dir in "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic clean-libtool mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-binPROGRAMS \
	clean-generic clean-libtool ctags distclean distclean-compile \
	distclean-generic distclean-libtool distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-binPROGRAMS install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am install-man \
	install-pdf install-pdf-am install-ps install-ps-am \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-libtool \
	pdf pdf-am ps ps-am tags uninstall uninstall-am \
	uninstall-binPROGRAMS


regenerate-built-sources:
	$(AM_V_GEN) BACONFILES="$(BACON_FILES)" BACONDIR="$(BACON_DIR)" $(top_srcdir)/src/update-from-bacon.sh

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
